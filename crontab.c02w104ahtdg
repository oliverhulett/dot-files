## This master file for this crontab is part of this user's ~/dot-files repository.
## Edit that file always and then run ~/dot-files/setup-home.sh to install it.
## Never use `crontab -e` or your changes may be overwritten.
HOME=/Users/ohulett
SHELL=/bin/bash
PATH=/Users/ohulett/dot-files/bin:/usr/local/bin:/usr/bin:/bin

* * * * * env >"${HOME}/.crontab.env"

@reboot chronic.sh "${HOME}/dot-files/autocommit.sh"
0 0-8,10,12,15,17-23 * * 1-5 chronic.sh "${HOME}/dot-files/autocommit.sh"
0 * * * 0,6 chronic.sh "${HOME}/dot-files/autocommit.sh"

@reboot chronic.sh sudo -n "${HOME}/dot-files/backup.sh"
5 0-8,10,12,15,17-23 * * 1-5 chronic.sh sudo -n "${HOME}/dot-files/backup.sh"
5 * * * 0,6 chronic.sh sudo -n "${HOME}/dot-files/backup.sh"

0 12 * * * find "${HOME}/repo" "${HOME}/src" -type d -name master -exec chronic.sh git -C "{}" pullme \;

0 12 * * * chronic.sh docker run --rm --privileged alpine hwclock -s
0 12 * * * sleep 1 && chronic.sh docker container rm -fv "$(if [ -e "${HOME}/.docker-container-noprune" ]; then docker container ls -aq | command grep -v -E "$(docker container ls -aq --filter $(paste -sd " --filter " <"${HOME}/.docker-container-noprune") | paste -sd '|')"; else docker container ls -aq; fi)"
0 12 * * 1 sleep 10 && chronic.sh docker image rm -fv "$(if [ -e "${HOME}/.docker-image-noprune" ]; then docker image ls -aq | command grep -v -E "$(docker image ls -aq --filter $(paste -sd " --filter " <"${HOME}/.docker-image-noprune") | paste -sd '|')"; else docker image ls -aq; fi)"
