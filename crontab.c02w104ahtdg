## This master file for this crontab is part of this user's ~/dot-files repository.
## Edit that file always and then run ~/dot-files/setup-home.sh to install it.
## Never use `crontab -e` or your changes may be overwritten.
HOME=/Users/ohulett
SHELL=/bin/bash
PATH=/Users/ohulett/dot-files/bin:/usr/local/bin:/usr/bin:/bin

* * * * * env >"${HOME}/.crontab.env"

@reboot chronic.sh nice "${HOME}/dot-files/autocommit.sh"
0 0-8,10,12,15,17-23 * * 1-5 chronic.sh nice "${HOME}/dot-files/autocommit.sh"
0 * * * 0,6 chronic.sh nice "${HOME}/dot-files/autocommit.sh"

@reboot chronic.sh nice sudo -n "${HOME}/dot-files/backup.sh"
5 0-8,10,12,15,17-23 * * 1-5 chronic.sh nice sudo -n "${HOME}/dot-files/backup.sh"

0 12 * * * nice find "${HOME}/repo" "${HOME}/src" -type d -name master -exec chronic.sh git -C "{}" pullme \;

0 12 * * * chronic.sh docker run --rm --privileged alpine hwclock -s
0 12 * * 1 BACKUP_DIR="${HOME}/etc/volt/monarch-database-backups"; mkdir --parents "${BACKUP_DIR}"; for i in $(docker ps -a -f 'Name=monarch-staging-*' --format '{{.Names}}' 2>/dev/null); do chronic.sh docker start $i; docker exec  -t "$i" pg_dumpall -U postgres >"${BACKUP_DIR}/${i}.sql"; done
0 12 * * * sleep 1 && CONTAINERS="$(if [ -e "${HOME}/.docker-container-noprune" ]; then docker container ls -aq | command grep -v -E "$(docker container ls -aq --filter $(paste -sd " --filter " <"${HOME}/.docker-container-noprune") | paste -sd '|')"; else docker container ls -aq; fi)"; if [ -n "${CONTAINERS}" ]; then chronic.sh docker container rm -v ${CONTAINERS}; fi
0 12 * * 1 sleep 10 && IMAGES="$(if [ -e "${HOME}/.docker-image-noprune" ]; then docker image ls -aq | command grep -v -E "$(docker image ls -aq --filter $(paste -sd " --filter " <"${HOME}/.docker-image-noprune") | paste -sd '|')"; else docker image ls -aq; fi)"; if [ -n "${IMAGES}" ]; then chronic.sh docker image rm -f ${IMAGES}; fi
